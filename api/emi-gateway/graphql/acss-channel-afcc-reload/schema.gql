"Actor types"
enum AcssChannelAfccReloadActorType{
  FARECOLLECTOR
  PARTIES
}

type AcssChannelAfccReloadEventAfccData{
  "Payment method before reload"
  before: String
  "Payment method after reload"
  after: String
}

type AcssChannelAfccReloadEventAfccBalance{
   "Payment method balance before reload"
   before: Int
   "Payment method balance after reload"
   after: Int
}

"AFCC data object"
type AcssChannelAfccReloadEventAfcc{
  "Object to represent the before and after states"
  data: AcssChannelAfccReloadEventAfccData
  "Univervesal card Id"
  UId: String
  "Payment method Id"
  cardId: String
  "Card balance"
  balance: AcssChannelAfccReloadEventAfccBalance 
}

type AcssChannelAfccReloadSource{
  "Maquine where reload was made"
  machine: String
  "Machine IP where the transaction was made"
  ip: String
}

"Reprents an AFCC reload event"
type AcssChannelAfccReloadEvent {
  "Event Id"
  id: ID
  "Reload amount"
  amount: Int
  "Business unit id"
  businessId: String
  "AFCC data object"
  afcc: AcssChannelAfccReloadEventAfcc
  "Event source"
  source: AcssChannelAfccReloadSource
  "Transactions"
  transactions: [AcssChannelAfccReloadTransaction]
  "When transaction was processed"
  timestamp: BigInt
}
"Business object with id and name"
type AcssChannelAfccReloadBusiness {
  "Business Id"
  id: String
  "business name"
  name: String
}

type AcssChannelAfccReloadEventFromEventStore {
  et: String
  av: Int
  etv: Int
  at: String
  data: AcssChannelAfccReloadEvent
  user: String
  timestamp: BigInt
}

type AcssChannelAfccReloadError{
  name: String
  message: String
  afccEvent: AcssChannelAfccReloadEventFromEventStore
  channleConf: AcssChannelAfccReloadConfigurationObject
  timestamp: BigInt
}

type AcssChannelAfccReloadChannel{
  "Channel processor id"
  id: String
  "Channel softwate version"
  v: String
  "Channel version configuration"
  c: String
}

type AcssChannelAfccReloadEvt{
  "Source event id"
  id: String
  "source event type"
  type: String
  "source event responsible user"
  user: String
}

"Represent transaction that are created by the microservice after process an AFCC reload event"
type AcssChannelAfccReloadTransaction{
  "transanction id"
  id: String
  "Transaction timestamp"
  timestamp: BigInt
  "Consignee business unit id"
  fromBu: String
  "Beneficiary business unit id"
  toBu: String
  "Money amount"
  amount: Float
  "Transaction's channel processor"
  channel: AcssChannelAfccReloadChannel
  "Transaction Type"
  type: String
  "Source event"
  evt: AcssChannelAfccReloadEvt
}


type AcssChannelAfccReloadActor{
  "Actor's business unit Id"
  buId: String
  "Consignee business unit id"
  fromBu: String
  "Actor name"
  name: String
  "percentage belonging"
  percentage: Float
}

type AcssChannelAfccReloadConfigurationWithMainPocket{
  actors: [AcssChannelAfccReloadActor]
  surplusCollector: AcssChannelAfccReloadActor
  bonusCollector: AcssChannelAfccReloadActor
}

type AcssChannelAfccReloadConfigurationWithBonusPocket{
  actors: [AcssChannelAfccReloadActor]
  investmentCollector: AcssChannelAfccReloadActor
}

type AcssChannelAfccReloadConfigurationWithCreditPocket{
  actors: [AcssChannelAfccReloadActor]
}

"Object that represent the rules to create transactions from AFCC event"
type AcssChannelAfccReloadConfigurationObject{
  "configuration id"
  id: BigInt
  "Last edition for this configuation"
  lastEdition: BigInt
  "user who Created this configuration"
  editor: String
  salesWithMainPocket: AcssChannelAfccReloadConfigurationWithMainPocket
  salesWithBonusPocket: AcssChannelAfccReloadConfigurationWithBonusPocket
  salesWithCreditPocket: AcssChannelAfccReloadConfigurationWithCreditPocket
}

input AcssChannelAfccReloadActorInput{
  "Actor's business unit Id"
  buId: String
   "Consignee business unit id"
  fromBu: String
  "Actor name"
  name: String
  "percentage belonging"
  percentage: Float
}

input AcssChannelAfccReloadConfigurationWithMainPocketInput{
  actors: [AcssChannelAfccReloadActorInput]
  surplusCollector: AcssChannelAfccReloadActorInput
  bonusCollector: AcssChannelAfccReloadActorInput
}

input AcssChannelAfccReloadConfigurationWithBonusPocketInput{
  actors: [AcssChannelAfccReloadActorInput]
  investmentCollector: AcssChannelAfccReloadActorInput
}

input AcssChannelAfccReloadConfigurationWithCreditPocketInput{
  actors: [AcssChannelAfccReloadActorInput]
}


"Object that represent the rules to create transactions from AFCC event"
input AcssChannelAfccReloadConfigurationInput{
  "configuration id"
  id: BigInt 
  "Last time when configuration where modified"
  lastEdition: BigInt
  "Clearin configuration to use when a sale is done with Main pocket"
  salesWithMainPocket: AcssChannelAfccReloadConfigurationWithMainPocketInput
  "Clearin configuration to use when a sale is done with Bonus pocket"
  salesWithBonusPocket: AcssChannelAfccReloadConfigurationWithBonusPocketInput
  "Clearin configuration to use when a sale is done with Credit pocket"
  salesWithCreditPocket: AcssChannelAfccReloadConfigurationWithCreditPocketInput
}

type AcssChannelAfccReloadCommandResponse{
  "Response code"
  code: Int
  "Response message"
  message: String
}


type Query {
  AcssChannelAfccReloadGetConfiguration(id: BigInt!): AcssChannelAfccReloadConfigurationObject
  AcssChannelAfccReloadGetAfccReloads(page: Int!, count: Int!, searchFilter: String): [AcssChannelAfccReloadEvent]
  AcssChannelAfccReloadGetAfccReloadErrors(page: Int!, count: Int!, searchFilter: String): [AcssChannelAfccReloadError]
  AcssChannelAfccReloadGetAfccReload(id: String!): AcssChannelAfccReloadEvent
  # AcssChannelAfccReloadGetAfccReloadDetails: AcssChannelAfccReloadEventDetail
  AcssChannelAfccReloadGetTransactions(page: Int!, count: Int!, sortColumn: String, sortOrder: String): [AcssChannelAfccReloadTransaction]
  AcssChannelAfccReloadGetReloadsCount: Int!
  AcssChannelAfccReloadGetBusinessByFilter(filter: String, limit: Int): [AcssChannelAfccReloadBusiness] 

}


type Mutation {
  AcssChannelAfccReloadCreateConfiguration(input: AcssChannelAfccReloadConfigurationInput!): AcssChannelAfccReloadCommandResponse
} 